// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updateAt    DateTime @default(now())
  price       Float
  oldPrice    Float
  name        String
  rating      Int?
  ratingCount Int?
  photo       String
  slug        String
}

model Basket {
  id           String       @id @default(cuid())
  basketToken  String
  createdAt    DateTime     @default(now())
  updateAt     DateTime     @default(now())
  productCount Int          @default(0)
  totalPrice   Float        @default(0)
  Items        BasketItem[]
}

model BasketItem {
  id            String  @id @default(cuid())
  count         Int
  productId     String  @unique
  basket        Basket  @relation(fields: [basketId], references: [id], onDelete: Cascade)
  basketId      String
  basketToken   String?
  productHeader Json
}

//  ProductHeader {
//   id          String
//   createdAt   DateTime @default(now())
//   updateAt    DateTime @default(now())
//   price       Float
//   oldPrice    Float
//   name        String
//   rating      Int?
//   ratingCount Int?
//   photo       String
//   slug        String
// }

// model PurchaseList {
//   id           String        @id @default(auto()) @map("_id") @db.ObjectId
//   Id           String?       @unique
//   createdAt    DateTime      @default(now())
//   updateAt     DateTime      @updatedAt
//   Name         String
//   ProductItems ProductItem[]
//   TotalPrice   Float         @default(0)
//   WebUrl       String
// }

// model ProductItem {
//   id             String        @id @default(auto()) @map("_id") @db.ObjectId
//   Id             String?       @unique
//   createdAt      DateTime      @default(now())
//   updateAt       DateTime      @default(now())
//   listId         String        @unique
//   Name           String
//   MainPhoto      Json?
//   IsPriceVisible Boolean
//   Price          Float?
//   ProductCount   Int
//   PurchaseList   PurchaseList? @relation(fields: [listId], references: [Id], onDelete: Cascade)
// }
